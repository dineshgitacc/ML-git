"""
Django settings for classification project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%r)4dk+1&^@u1g0cxd2ep$tckn&x($6!!0)9o*fa3l4zfw*ys7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

BACKGROUND_TASK_RUN_ASYNC =  True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'corsheaders',
    'oauth2_provider',
    'rest_framework',
    'analysis_request',
    'training',
    'inference',
    'dataset',
    'django_filters',
    'django_cron',
    'background_task',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'classification.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

CRON_CLASSES = [
    "cron.api_call.ProcessingRequestCronJob",
    "cron.api_call.AnalysisRetrainRequestClassificationCronJob"
]

WSGI_APPLICATION = 'classification.wsgi.application'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
    ),
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',)
}

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'text_classification',
        'USER': 'postgres',
        'PASSWORD': 'iopex@123',
        'HOST': 'text_classification_api_db',
        'PORT': '5432',
    }
}
# DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
#        'NAME': os.getenv('POSTGRES_DB'),
#        'USER': os.getenv('POSTGRES_USER'),
#        'PASSWORD': os.getenv('POSTGRES_PASSWORD'),
#        'HOST': os.getenv('POSTGRES_HOST'),
#        'PORT': os.getenv('POSTGRES_PORT')
#    }
# }
# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters':{
        'simple':{
            'format': "%(asctime)s - %(name)s -%(levelname)s - %(message)s"
        }
    },
    'handlers':{
        'console':{
            'class': 'logging.StreamHandler',
            'level': 'DEBUG',
            'formatter': 'simple',
            'stream': 'ext://sys.stdout',
        },
        'info_file_handler':{
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'level': 'INFO',
            'formatter': 'simple',
            'filename':'./logger/info.log',
            'when': 'D',
            'interval': 7,
            'backupCount': 0,
            'encoding': 'utf8',
        },
        'error_file_handler':{
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'level': 'ERROR',
            'formatter': 'simple',
            'filename':'./logger/error.log',
            'when': 'D',
            'interval': 7,
            'backupCount': 0,
            'encoding': 'utf8',
        },
    },
    'loggers':{
        'django':{
            'level': 'ERROR',
            'handlers': ['console'],
            'propagate': 'no',
        },
    },
    'root':{
        'level': 'INFO',
        'handlers': ['console', 'info_file_handler','error_file_handler']
    }
}
# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

DATA_UPLOAD_MAX_MEMORY_SIZE = 524288000000

#  maximum possible task run time, after which tasks will be unlocked and tried again ( 20 hours )
MAX_RUN_TIME = 72000
MAX_ATTEMPTS=1
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, "static_files/")

STATIC_URL = '/static/'

MEDIA_URL =  '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
APP_LOC = os.path.join(BASE_DIR)
DOWNLOAD_URL = '/media/'

PROCESSING_REQUEST_TIME = 5
CLIENT_ID = int(os.environ.get('CLIENT_ID'))
PROJECT_ID = int(os.environ.get('PROJECT_ID'))

APP_URL=str(os.environ.get('APP_URL')) #'http://10.10.50.36:8051'#str(os.environ.get('APP_URL'))
FAST_API_MODEL_TRAINING= str(os.environ.get('FAST_API_MODEL_TRAINING'))
ML_MODEL_TRAINING_URL =  'pycaret/training' #pycaret implementation
SENTIMENT_ANALYSIS_URL = str(os.environ.get('SENTIMENT_ANALYSIS_URL'))
KAFKA_SERVER_URL = str(os.environ.get('KAFKA_SERVER_URL'))

CLASSIFICATION_SERVER = str(os.environ.get('CLASSIFICATION_URL'))
INTENT_CLASSIFICATION_SERVER= str(os.environ.get('INTENT_CLASSIFICATION_SERVER'))
UNSUPERVISED_CLASSIFICATION_URL= str(os.environ.get('UNSUPERVISED_CLASSIFICATION_URL')) #'http://10.20.103.217:8082/cluster_classifier/'
BERT_UNSUPERVISED_CALLBACK_URL= 'http://10.10.50.20:4101/analysis/cluster/classification/callback/'#str(os.environ.get('BERT_UNSUPERVISED_CALLBACK_URL')) # 'https://nlp.iopex.com:8007/analysis/cluster/classification/callback/'
BERT_INTENT_CALLBACK_URL= 'http://10.10.50.20:4101/analysis/bert/intent/callback/'#str(os.environ.get('BERT_INTENT_CALLBACK_URL'))
HIERARCHICAL_CLUSTERING_URL= 'http://10.10.50.36:8002/cluster'#str(os.environ.get('HIERARCHICAL_CLUSTERING_URL'))
HIERARCHICAL_CLUSTERING_CALLBACK_URL= 'http://10.10.50.20:4101/analysis/hierarchical_clustering/callback/' #str(os.environ.get('HIERARCHICAL_CLUSTERING_CALLBACK_URL'))
DEFAULT_CLASSIFICATION_ID= 5
DEFAULT_CLASSIFICATION_ALGORITHM= 'XGB Classifier'
DEFAULT_CLASSIFICATION_ALGORITHM_CONFIG= '{"parameter" : {"seed" : null,"gamma" : 0,"n_jobs" : 1,"silent" : null,"booster" : "gbtree" ,"missing" : null,"nthread" : null,"max_depth" : 3,"objective" : "multi:softprob" ,"reg_alpha" : 0,"subsample" : 1,"verbosity" : 1,"base_score" : 0.5,"reg_lambda" : 1,"n_estimators" : 100,"random_state" : 0,"learning_rate" : 0.1,"max_delta_step" : 0,"colsample_bynode" : 1,"colsample_bytree" : 1,"min_child_weight" : 1,"scale_pos_weight" : 1,"colsample_bylevel" : 1},"vectorizer" : { "name" : "countvectorizer", "parameter" : {"input" : "content" ,"binary" : false,"max_df" : 1,"min_df" : 1,"analyzer" : "word" ,"encoding" : "utf-8" ,"lowercase" : true,"tokenizer" : null,"stop_words" : null,"vocabulary" : null,"ngram_range" : [1,1],"decode_error" : "strict" ,"max_features" : null,"preprocessor" : null,"strip_accents" : null,"token_pattern" : "(?u)\\b\\w\\w+\\b" }},"preprocessor" : {}}'
DEFAULT_BERT_INTENT_CONFIG='{"training_file":"","callback":"","reference_id":"","config":{"model_type":"bert","seed":1234,"train_batch_size":32,"eval_batch_size":64,"max_seq_len":50,"learning_rate":0.00005,"num_train_epochs":20,"weight_decay":0,"gradient_accumulation_steps":1,"adam_epsilon":1e-8,"max_grad_norm":1,"max_steps":-1,"warmup_steps":0,"dropout_rate":0.1,"logging_steps":64,"save_steps":64,"do_train":true,"do_eval":false,"no_cuda":false,"ignore_index":0,"slot_loss_coef":1,"use_crf":false,"slot_pad_label":"PAD"}}'
FAST_API= 'http://10.10.50.20:4106/'#str(os.getenv('FAST_API')) # "http://10.10.50.20:4100/"
#FAST_API_MODEL_TRAINING= "http://10.10.50.20:4102/"
ZERO_SHOT_CLASSIFICATION_INFERENCE = str(os.environ.get('ZERO_SHOT_CLASSIFICATION_INFERENCE')) # "http://10.10.50.20:4100/classification/inference/file"
PREDICTIVE_ANALYSIS_MANUAL_URL = 'http://10.10.50.36:4004/churn'
PREDICTIVE_ANALYSIS_CLASSIFICATION_AUTO_URL = 'http://10.10.50.36:4014/predictive_analysis_Classification'#'http://10.10.50.20:8008/sentimnt_analysis'
PREDICTIVE_ANALYSIS_REGRESSION_AUTO_URL = 'http://10.10.50.36:4011/predictive_analysis_regression'
PREDICTIVE_ANALYSIS_FORECAST_AUTO_URL =  'http://10.10.50.36:4012/Time_Series_Training'
AUTO_UNSUPERVISED_URL = 'http://10.10.50.20:8009/auto_unsupervised'


from kafka import KafkaProducer
import json
def json_serializer(data):
    return json.dumps(data).encode("utf-8")
PRODUCER=KafkaProducer(bootstrap_servers=[KAFKA_SERVER_URL],
                   value_serializer=json_serializer)
